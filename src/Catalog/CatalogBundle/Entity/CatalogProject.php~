<?php

//src/Catalog/CatalogBundle/Entity/Catalog.php

namespace Catalog\CatalogBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Gedmo\Mapping\Annotation as Gedmo;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * @ORM\Table(
 *    name="catalog_project",
 *    uniqueConstraints={
 *        @ORM\UniqueConstraint(name="IDX_CATALOG_PROJECT_KEY", columns={"project_id", "catalog_id"}),
 *    })
 * @ORM\Entity(repositoryClass="Catalog\CatalogBundle\Entity\Repository\CatalogProjectRepository")
 * @UniqueEntity(fields="{project_id, catalog_id}", message="Sorry, this relations is already in use.", groups={"CatalogProject"})
 */
class CatalogProject {
    /** 
    * @ORM\Id
    * @ORM\Column(type="integer")
    */
    protected $project_id;
    /**
     * @ORM\ManyToOne(targetEntity="\Catalog\ProjectBundle\Entity\Project", inversedBy="join_project")
     * @ORM\JoinColumn(name="project_id", referencedColumnName="id", onDelete="CASCADE")
     */
    protected $project;
    
    /** 
    * @ORM\Id
    * @ORM\Column(type="integer")
    */
   protected $catalog_id;
    /**
     * @ORM\ManyToOne(targetEntity="Catalog", inversedBy="join_catalog")
     * @ORM\JoinColumn(name="catalog_id", referencedColumnName="id", onDelete="CASCADE")
     */
    protected $catalog;
}

